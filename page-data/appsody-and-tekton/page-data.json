{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/appsody-and-tekton","result":{"data":{"post":{"__typename":"MdxPost","id":"29cf424f-88d4-5c25-bc7d-2e1ab0cc683c","slug":"/appsody-and-tekton","title":"Appsody and Tekton","date":"02.03.2020","tags":[{"name":"open-shift, ocp, cloud pak for application","slug":"open-shift-ocp-cloud-pak-for-application"}],"description":"Appsody and Tekton based CI/CD","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Appsody and Tekton\",\n  \"date\": \"2020-03-02T00:00:00.000Z\",\n  \"description\": \"Appsody and Tekton based CI/CD\",\n  \"tags\": [\"open-shift, ocp, cloud pak for application\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This article is a collation of many great resources by IBMers.\"), mdx(\"h1\", null, \"Purpose:\"), mdx(\"p\", null, \"To provide CI/CD pipelines on IBM Cloud. That means, you just focus on writing your business logic and test suites, let IBM take care of the rest, with Cloud Pak for Apps.\"), mdx(\"p\", null, \"  Toolkit:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IDE: VSCode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Containerization: Docker \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"App scaffolding & containerization best practices: Appsody \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Versioning: Git \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source of truth/ repository: Github (with webhook)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deployment/ Pipelines: Tekton \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud: IBM Cloud \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cluster: Red Hat OpenShift Container Platform v 4.3\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"This article is a collation of many great resources by IBMers. Purpose: To provide CI/CD pipelines on IBM Cloud. That means, you just focusâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/appsody-and-tekton"}}}